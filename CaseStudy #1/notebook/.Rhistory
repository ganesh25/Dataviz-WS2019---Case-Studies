codes_lookup <- c('a'= [1:3,9:11], 'c' = [4,8], 'c'= [5:7])
codes_lookup <- c('a'= [1:3] & [9:11], 'c' = [4,8], 'c'= [5:7])
codes_lookup[c('a'= [1:3] & [9:11], 'c' = [4,8], 'c'= [5:7])]
DT <- data.table(x = rep(c("a","b","c"), each = 3), y = c(1, 3, 6), v = 1:9)
DT
typeof(DT)
class(DT)
nrow(DT)
DT[2,]
DT[c(3,5)]
DT
iris_dt <- as.data.table(iris)
summary(iris_dt)
iris_dt[1:4]
iris_dt[species == "setosa"][1:3]
iris_dt[Species == "setosa"][1:3]
iris_dt[Petal.Length >6]
iris_dt[Species == "versicolor" && Sepal.Width < 2.5]
iris_dt[Species == "versicolor" & Sepal.Width < 2.5]
DT[, x]
class(DT[,X])
class(DT[ ,X])
class(DT[ ,x])
DT.columns
DT.columns()
class(DT)
shape(DT)
DT
class(DT[ ,X])
class(DT[ ,x])
DT[,x]
DT[3,x]
DF[,x*y]
DT[,x*y]
DT[,y*v]
df <- as.data.frame(DT)
df[,y*v]
iris
irs[1:3]
iris[1:3]
iris[1:3]
iris_dt[1:2]
iris_dt_copy <-  copy(iris_dt)
iris_dt_copy[1:@]
iris_dt_copy[1:2]
iris_dt_copy[,order(Species)]
iris_dt_copy[order(Species)]
pl <- iris_dt_copy[order(Species)]
pl <- mean(pl)
?mean
DT[1:2]
DT[1:2, .(x,y)]
iris_dt[Species == "virginica", mean(Petal.Length)]
iris_dt[Species == "virginica"] [mean(Petal.Length)]
iris_dt[, .(mean(PL), median(PL))]
iris_dt[, .(mean(Petal.Length), median(Petal.Length))]
library(readr)
flightsLAX <- read_csv("F:/TUM Semesters/TUM - 3rd Sem/R/Case Study - I/DataAnalysisInR-CaseStudies/CaseStudy#1/datasets/flightsLAX.csv")
View(flightsLAX)
flights_df <- flightsLAX
View(flights_df)
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons"), position = "dodge")
library(stringr) # String operations
library(chron) # Time operations
library(ggplot2) # Plotting
library(plyr) # Data Manipulation
library(dplyr) # Splitting Applying Combining Data
library(tidyverse) #Melting purpose
library(reshape2)
airlines_df <- read.csv("../datasets/airlines.csv")
airports_df <- read.csv("../datasets/airports.csv")
flights_df <- read.csv("../datasets/flightsLAX.csv")
airlines_df <- read.csv("../datasets/airlines.csv")
airports_df <- read.csv("../datasets/airports.csv")
flights_df <- read.csv("../datasets/flightsLAX.csv")
convertToTime <- function(timeColumn) {
# Add leading 0s
timeColumn <- str_pad(timeColumn, width = 4, side = "left", pad = "0")
# Add trailing 0s
timeColumn <- str_pad(timeColumn, width = 6, side = "right", pad = "0")
# Convert to time format
times(gsub("(..)(..)(..)", "\\1:\\2:\\3", timeColumn))
}
flights_df$SCHEDULED_DEPARTURE <- convertToTime(flights_df$SCHEDULED_DEPARTURE)
flights_df$DEPARTURE_TIME <- convertToTime(flights_df$DEPARTURE_TIME)
flights_df$SCHEDULED_ARRIVAL <- convertToTime(flights_df$SCHEDULED_ARRIVAL)
flights_df$ARRIVAL_TIME <- convertToTime(flights_df$ARRIVAL_TIME)
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons"), position = "dodge")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System", "Security")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System", "Security"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System", "Security"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData) + geom_bar(mapping = aes(x=AIRLINE, fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(aes(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green")))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData, aes(x=AIRLINE)) + geom_bar(aes(fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(aes(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green")))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(data = cancleData, aes(x=AIRLINE)) + geom_bar(aes(fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(aes(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green")))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = variable)) + geom_bar(aes(fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(aes(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green")))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(aes(fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(aes(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green")))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(aes(fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count",color="Cancellation Reasons") + scale_color_manual(aes(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green")))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(aes(fill= CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar( position = "dodge") + labs(title="Cancellations", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("Red","Blue","Green"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar( position = "dodge") + labs(title="Cancellations", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar( position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE)) + geom_bar( position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar( position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green"))
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar( position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green")) + theme_bw()
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(fill="CANCELLATION_REASON", position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green")) + theme_bw()
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(fill=CANCELLATION_REASON, position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green")) + theme_bw()
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(fill=CANCELLATION_REASON, position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green")) + theme_bw()
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(aes(fill=CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + scale_color_manual(labels = c("Airline/Carrier", "Weather", "National Air System"), values = c("red","blue","green")) + theme_bw()
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, color = CANCELLATION_REASON)) + geom_bar(aes(fill=CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE)) + geom_bar(aes(fill=CANCELLATION_REASON), position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar( position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + mytheme
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count") + mytheme
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "fill") + labs(title="Cancellations\n", x="Airline",y="Count")
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "fill") + labs(title="Cancellations\n", x="Airline",y="Count")
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count")
ggplot(head(AA_routes %>% group_by(n) %>% arrange(desc(n)),10), aes(ROUTE,n)) + geom_bar(stat='identity', aes(fill=ROUTE)) + theme_bw()
AA_routes <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & AIRLINE == "AA"))
AA_routes$ROUTE <- paste(AA_routes$ORIGIN_AIRPORT,"-",AA_routes$DESTINATION_AIRPORT)
AA_routes$ORIGIN_AIRPORT <- NULL
AA_routes$DESTINATION_AIRPORT <- NULL
AA_routes <- AA_routes[,c(2,1)]
ggplot(head(AA_routes %>% group_by(n) %>% arrange(desc(n)),10), aes(ROUTE,n)) + geom_bar(stat='identity', aes(fill=ROUTE)) + theme_bw()
ggplot(head(AA_routes %>% group_by(n) %>% arrange(desc(n)),10), aes(ROUTE,n)) + geom_bar(stat='identity', aes(fill=ROUTE)) + labs(title="Top 10 used routes by AA\n", x="Route",y="Number of times used")+ theme_bw()
ggplot(head(popular_routes %>% group_by(n) %>% arrange(desc(n)),10), aes(ROUTE,n)) + geom_bar(stat='identity', aes(fill=ROUTE)) + labs(title="Top 10 used routes by all Airlines\n", x="Route",y="Number of times used")+ theme_bw()
popular_routes <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT)))
popular_routes$ROUTE <- paste(popular_routes$ORIGIN_AIRPORT,"-",popular_routes$DESTINATION_AIRPORT)
popular_routes$ORIGIN_AIRPORT <- NULL
popular_routes$DESTINATION_AIRPORT <- NULL
popular_routes <- popular_routes[,c(2,1)]
popular_routes %>% as.data.frame() %>% filter(n == max(n))
ggplot(head(popular_routes %>% group_by(n) %>% arrange(desc(n)),10), aes(ROUTE,n)) + geom_bar(stat='identity', aes(fill=ROUTE)) + labs(title="Top 10 used routes by all Airlines\n", x="Route",y="Number of times used")+ theme_bw()
ggplot(flights_df, aes(AIRLINE)) + geom_bar(aes(fill=AIRLINE)) + labs(title="Number of times each Airline is used\n", x='Airline', y='Number of times used') + theme_bw()
ggplot(flights_df, aes(AIRLINE,DEPARTURE_DELAY)) + geom_point() + labs(title="Airlines plotted with their Departure Delay", x="Airline",y="Departure Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,ARRIVAL_DELAY)) + geom_point() + labs(title="Airlines plotted with their Arrival Delay", x="Airline",y="Arrival Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,DEPARTURE_DELAY, fill = AIRLINE)) + geom_point() + labs(title="Airlines plotted with their Departure Delay", x="Airline",y="Departure Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,ARRIVAL_DELAY, fill = AIRLINE)) + geom_point() + labs(title="Airlines plotted with their Arrival Delay", x="Airline",y="Arrival Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,DEPARTURE_DELAY)) + geom_point(aes(fill=AIRLINE)) + labs(title="Airlines plotted with their Departure Delay", x="Airline",y="Departure Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,ARRIVAL_DELAY)) + geom_point(aes(fill=AIRLINE)) + labs(title="Airlines plotted with their Arrival Delay", x="Airline",y="Arrival Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,DEPARTURE_DELAY)) + geom_point(color=AIRLINE) + labs(title="Airlines plotted with their Departure Delay", x="Airline",y="Departure Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,DEPARTURE_DELAY)) + geom_point(aes(color=AIRLINE)) + labs(title="Airlines plotted with their Departure Delay", x="Airline",y="Departure Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,ARRIVAL_DELAY)) + geom_point(aes(color=AIRLINE)) + labs(title="Airlines plotted with their Arrival Delay", x="Airline",y="Arrival Delay")+ theme_bw()
popular_routes <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT)))
View(popular_routes)
popular_routes$ROUTE <- paste(popular_routes$ORIGIN_AIRPORT,"-",popular_routes$DESTINATION_AIRPORT)
popular_routes$ORIGIN_AIRPORT <- NULL
popular_routes$DESTINATION_AIRPORT <- NULL
popular_routes <- popular_routes[,c(2,1)]
View(head(popular_routes %>% group_by(n) %>% arrange(desc(n)),20)
)
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2$ROUTE <- paste(popular_routes2$ORIGIN_AIRPORT,"-",popular_routes2$DESTINATION_AIRPORT)
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F, error = F)
library(stringr) # String operations
library(chron) # Time operations
library(ggplot2) # Plotting
library(plyr) # Data Manipulation
library(dplyr) # Splitting Applying Combining Data
library(tidyverse) #Melting purpose
library(reshape2)
airlines_df <- read.csv("../datasets/airlines.csv")
airports_df <- read.csv("../datasets/airports.csv")
flights_df <- read.csv("../datasets/flightsLAX.csv")
head(flights_df)
convertToTime <- function(timeColumn) {
# Add leading 0s
timeColumn <- str_pad(timeColumn, width = 4, side = "left", pad = "0")
# Add trailing 0s
timeColumn <- str_pad(timeColumn, width = 6, side = "right", pad = "0")
# Convert to time format
times(gsub("(..)(..)(..)", "\\1:\\2:\\3", timeColumn))
}
flights_df$SCHEDULED_DEPARTURE <- convertToTime(flights_df$SCHEDULED_DEPARTURE)
flights_df$DEPARTURE_TIME <- convertToTime(flights_df$DEPARTURE_TIME)
flights_df$SCHEDULED_ARRIVAL <- convertToTime(flights_df$SCHEDULED_ARRIVAL)
flights_df$ARRIVAL_TIME <- convertToTime(flights_df$ARRIVAL_TIME)
head(flights_df)
total_incoming_flights <- table(flights_df$DESTINATION_AIRPORT)["LAX"][[1]]
total_outgoing_flights <- table(flights_df$ORIGIN_AIRPORT)["LAX"][[1]]
df <- data.frame(direction = c("Incoming", "Outgoing"),
no_of_flights = c(total_incoming_flights, total_outgoing_flights))
p <- ggplot(data = df, aes(x = direction, y = no_of_flights, fill = direction)) +
xlab("All time") + ylab("No. of flights") +
ggtitle("All time traffic stats for LAX airport") +
geom_bar(stat = "identity", width = 0.5) +
geom_text(aes(label = no_of_flights), vjust = -0.3, size = 3.5) +
theme_minimal()
p
monthly_flights <- c()
for(month in 1:length(month.name)) {
incoming_flights <- nrow(subset(flights_df, MONTH == month & DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, MONTH == month & ORIGIN_AIRPORT == "LAX"))
monthly_flights <- c(monthly_flights, c(incoming_flights, outgoing_flights))
}
monthly_labels <- as.vector(rbind(month.name, month.name))
directions <- rep(c("Incoming", "Outgoing"), length(month.name))
df <- data.frame(monthly_labels, directions, monthly_flights)
# To prevent ggplot from sorting the x-axis alphabetically
df$monthly_labels <- as.character(df$monthly_labels)
df$monthly_labels <- factor(df$monthly_labels, levels = unique(df$monthly_labels))
p <- ggplot(data = df, aes(x = monthly_labels, y = monthly_flights, fill = directions)) +
xlab("Month") + ylab("No. of flights") +
ggtitle("Monthly traffic stats for LAX airport") +
geom_bar(stat = "identity", width = 0.5, position = "dodge") +
theme_minimal()
p
day_labels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
# Since LAX was not operational on October
no_of_weeks <- 49
day_flights <- c()
for(day in 1:length(day_labels)) {
incoming_flights <- nrow(subset(flights_df, DAY_OF_WEEK == day & DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, DAY_OF_WEEK == day & ORIGIN_AIRPORT == "LAX"))
day_flights <- c(day_flights, c(incoming_flights / no_of_weeks, outgoing_flights / no_of_weeks))
}
directions <- rep(c("Incoming", "Outgoing"), length(day_labels))
day_labels <- as.vector(rbind(day_labels, day_labels))
df <- data.frame(day_labels, directions, day_flights)
# To prevent ggplot from sorting the x-axis alphabetically
df$day_labels <- as.character(df$day_labels)
df$day_labels <- factor(df$day_labels, levels = unique(df$day_labels))
p <- ggplot(data = df, aes(x = day_labels, y = day_flights, fill = directions)) +
xlab("Day") + ylab("No. of flights") +
ggtitle("Average weekday traffic stats for LAX airport") +
geom_bar(stat = "identity", width = 0.5, position = "dodge") +
theme_minimal()
p
plot_hourly_traffic_for_particular_day <- function(day, month) {
day_labels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
hourly_flights <- c()
for(hour in 0:23) {
incoming_flights <- nrow(subset(flights_df, hours(DEPARTURE_TIME) == hour & DAY == day & MONTH == month, DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, hours(ARRIVAL_TIME) == hour & DAY == day & MONTH == month, ORIGIN_AIRPORT == "LAX"))
hourly_flights <- c(hourly_flights, c(incoming_flights, outgoing_flights))
}
directions <- rep(c("Incoming", "Outgoing"), length(hourly_flights) / 2)
hour_labels <- as.vector(rbind(seq(from = 0, to = 23), seq(from = 0, to = 23)))
df <- data.frame(hour_labels, directions, hourly_flights)
p <- ggplot(data = df, aes(x = hour_labels, y = hourly_flights, fill = directions)) +
xlab("Hour of day") + ylab("No. of flights") +
ggtitle("Stats for a particular day") +
geom_bar(stat = "identity", width = 0.5, position = "dodge") +
theme_minimal()
p
}
plot_hourly_traffic_for_particular_day(day = 30, month = 8)
plot_hourly_line_traffic_by_day <- function(day_of_week) {
day_labels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
# Since LAX was not operational on October
no_of_weeks <- 49
hourly_flights <- c()
hourly_incoming_flights <- c()
hourly_outgoing_flights <- c()
for(hour in 0:23) {
incoming_flights <- nrow(subset(flights_df, hours(DEPARTURE_TIME) == hour & DAY_OF_WEEK == day_of_week & DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, hours(ARRIVAL_TIME) == hour & DAY_OF_WEEK == day_of_week & ORIGIN_AIRPORT == "LAX"))
hourly_incoming_flights <- c(hourly_incoming_flights, incoming_flights / no_of_weeks)
hourly_outgoing_flights <- c(hourly_outgoing_flights, outgoing_flights / no_of_weeks)
}
directions <- rep(c("Incoming", "Outgoing"), length(hourly_flights) / 2)
hour_labels <- seq(from = 0, to = 23)
# df <- data.frame(hour_labels, directions, hourly_flights)
p <- ggplot() +
xlab("Hour of Day") + ylab("No. of flights") +
ggtitle(day_labels[day_of_week]) +
geom_line(aes(x = hour_labels, y = hourly_incoming_flights, group = 1), color = "brown1") +
geom_line(aes(x = hour_labels, y = hourly_outgoing_flights, group = 2), color = "lightseagreen") +
theme_minimal()
p
}
plot_hourly_line_traffic_by_day(1)
plot_hourly_line_traffic_by_day(2)
plot_hourly_line_traffic_by_day(3)
plot_hourly_line_traffic_by_day(4)
plot_hourly_line_traffic_by_day(5)
plot_hourly_line_traffic_by_day(6)
plot_hourly_line_traffic_by_day(7)
cancleData<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "fill") + labs(title="Cancellations\n", x="Airline",y="Count")
ggplot(cancleData, aes(x=AIRLINE, fill = CANCELLATION_REASON)) + geom_bar(position = "dodge") + labs(title="Cancellations\n", x="Airline",y="Count")
flights_df_t <- transform(flights_df,DELAY_IN_AIR= ELAPSED_TIME -SCHEDULED_TIME)%>% select(c(1:17),DELAY_IN_AIR, everything())
delayBreakDown <- subset(flights_df_t, ARRIVAL_DELAY > 0, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,DEPARTURE_DELAY,DELAY_IN_AIR,ARRIVAL_DELAY))
head(delayBreakDown)
MeanDelays <- group_by(flights_df,AIRLINE) %>% summarise(Mean_DEPARTURE_DELAY= mean(DEPARTURE_DELAY,na.rm = TRUE),
Mean_ARRIVAL_DELAY=mean(ARRIVAL_DELAY,na.rm = TRUE),
Mean_AIR_SYSTEM_DELAY=mean(AIR_SYSTEM_DELAY,na.rm = TRUE),
Mean_SECURITY_DELAY=mean(SECURITY_DELAY,na.rm = TRUE),
Mean_AIRLINE_DELAY=mean(AIRLINE_DELAY,na.rm = TRUE),
Mean_LATE_AIRCRAFT_DELAY=mean(LATE_AIRCRAFT_DELAY,na.rm = TRUE),
Mean_WEATHER_DELAY=mean(WEATHER_DELAY,na.rm = TRUE))
library(reshape2)
melt_MeanDelays <- melt(data=MeanDelays,id.vars = 'AIRLINE', measure.vars = c('Mean_AIR_SYSTEM_DELAY','Mean_SECURITY_DELAY','Mean_AIRLINE_DELAY','Mean_LATE_AIRCRAFT_DELAY','Mean_WEATHER_DELAY'))
head(MeanDelays)
ggplot(melt_MeanDelays , aes(x=AIRLINE, y=value, fill=variable)) + geom_bar(stat='identity', position='dodge')
ggplot(data = flights_df, mapping = aes(x = AIRLINE, y = ARRIVAL_DELAY)) +  geom_point(position = "jitter")
melt(data=MeanDelays,id.vars = 'AIRLINE', measure.vars = c('Mean_DEPARTURE_DELAY','Mean_ARRIVAL_DELAY')) %>% ggplot() + geom_bar(aes(x=AIRLINE, y=value, fill=variable),stat="identity",position='dodge')
ARRIVAL_DELAY_PiE<- summarise(delayBreakDown,DEPARTURE_DELAY=mean(DEPARTURE_DELAY,na.rm = T),DELAY_IN_AIR=mean(DELAY_IN_AIR,na.rm = T))
ARRIVAL_DELAY_PiE <- melt(data = ARRIVAL_DELAY_PiE)
ARRIVAL_DELAY_PiE <- mutate(ARRIVAL_DELAY_PiE, Percentage = value / sum(value)*100)
ARRIVAL_DELAY_PiE <- ARRIVAL_DELAY_PiE %>% mutate_at(vars(Percentage), funs(round(., 2)))
ggplot(ARRIVAL_DELAY_PiE,aes(x="",y=Percentage,fill=variable)) +  geom_bar(stat="identity", width=1, color="white") + coord_polar("y", start=0) + geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))+ theme_void()
delayBreakDownAll <- subset(flights_df_t, CANCELLED == 0 & DIVERTED == 0, select = c(AIRLINE,FLIGHT_NUMBER,TAIL_NUMBER,ORIGIN_AIRPORT,DESTINATION_AIRPORT,DEPARTURE_DELAY,DELAY_IN_AIR,ARRIVAL_DELAY,AIR_SYSTEM_DELAY,SECURITY_DELAY,AIRLINE_DELAY,LATE_AIRCRAFT_DELAY,WEATHER_DELAY))
delayBreakDownAll$categorize_Delay[delayBreakDownAll$ARRIVAL_DELAY<15]<- 'On_Time_Or_Small_Delay'
delayBreakDownAll$categorize_Delay[delayBreakDownAll$ARRIVAL_DELAY>=15 & delayBreakDownAll$ARRIVAL_DELAY<45]<- 'Medium_Delay'
delayBreakDownAll$categorize_Delay[delayBreakDownAll$ARRIVAL_DELAY>=45]<- 'Large_Delay'
delayBreakDownAll$categorize_Delay<-as.factor(delayBreakDownAll$categorize_Delay)
ggplot(data = delayBreakDownAll) +  geom_bar(mapping = aes(x=AIRLINE, fill= categorize_Delay), position = "fill") + coord_flip()
cancleData_Route<- subset(flights_df, CANCELLED == 1, select = c(AIRLINE,ORIGIN_AIRPORT,DESTINATION_AIRPORT,FLIGHT_NUMBER,TAIL_NUMBER,CANCELLATION_REASON))
cancleData_Route$ROUTE<- paste(cancleData_Route$ORIGIN_AIRPORT,"-",cancleData_Route$DESTINATION_AIRPORT)
top5cancellation_route<- subset(cancleData_Route,ROUTE=="LAX - SFO"  | ROUTE=='SFO - LAX'| ROUTE=='LAX - OAK' | ROUTE == 'OAK - LAX' | ROUTE == 'SJC - LAX')
ggplot(data=top5cancellation_route)+geom_bar(mapping = aes(x=ROUTE,fill=CANCELLATION_REASON),position = 'dodge')
ggplot(flights_df, aes(AIRLINE,DEPARTURE_DELAY)) + geom_point(aes(color=AIRLINE)) + labs(title="Airlines plotted with their Departure Delay", x="Airline",y="Departure Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE,ARRIVAL_DELAY)) + geom_point(aes(color=AIRLINE)) + labs(title="Airlines plotted with their Arrival Delay", x="Airline",y="Arrival Delay")+ theme_bw()
ggplot(flights_df, aes(AIRLINE)) + geom_bar(aes(fill=AIRLINE)) + labs(title="Number of times each Airline is used\n", x='Airline', y='Number of times used') + theme_bw()
count(flights_df %>% group_by(AIRLINE) %>% filter(AIRLINE=="AA"))
count(flights_df %>% group_by(AIRLINE) %>% filter(AIRLINE=="MQ"))
count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT)))
popular_routes <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT)))
popular_routes$ROUTE <- paste(popular_routes$ORIGIN_AIRPORT,"-",popular_routes$DESTINATION_AIRPORT)
popular_routes$ORIGIN_AIRPORT <- NULL
popular_routes$DESTINATION_AIRPORT <- NULL
popular_routes <- popular_routes[,c(2,1)]
head(popular_routes %>% group_by(n) %>% arrange(desc(n)),10)
popular_routes %>% as.data.frame() %>% filter(n == max(n))
ggplot(head(popular_routes %>% group_by(n) %>% arrange(desc(n)),10), aes(ROUTE,n)) + geom_bar(stat='identity', aes(fill=ROUTE)) + labs(title="Top 10 used routes by all Airlines\n", x="Route",y="Number of times used")+ theme_bw()
count(flights_df %>% group_by(AIRLINE,ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & AIRLINE == "AA"))
head(count(flights_df %>% group_by(AIRLINE,ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & AIRLINE == "AA")) %>% arrange(desc(n)),10)
AA_routes <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & AIRLINE == "AA"))
AA_routes$ROUTE <- paste(AA_routes$ORIGIN_AIRPORT,"-",AA_routes$DESTINATION_AIRPORT)
AA_routes$ORIGIN_AIRPORT <- NULL
AA_routes$DESTINATION_AIRPORT <- NULL
AA_routes <- AA_routes[,c(2,1)]
ggplot(head(AA_routes %>% group_by(n) %>% arrange(desc(n)),10), aes(ROUTE,n)) + geom_bar(stat='identity', aes(fill=ROUTE)) + labs(title="Top 10 used routes by AA\n", x="Route",y="Number of times used")+ theme_bw()
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F, error = F)
library(stringr) # String operations
library(chron) # Time operations
library(ggplot2) # Plotting
library(plyr) # Data Manipulation
library(dplyr) # Splitting Applying Combining Data
library(tidyverse) #Melting purpose
library(reshape2)
library(data.table) # for setDT
airlines_df <- read.csv("../datasets/airlines.csv")
airports_df <- read.csv("../datasets/airports.csv")
flights_df <- read.csv("../datasets/flightsLAX.csv")
head(flights_df)
convertToTime <- function(timeColumn) {
# Add leading 0s
timeColumn <- str_pad(timeColumn, width = 4, side = "left", pad = "0")
# Add trailing 0s
timeColumn <- str_pad(timeColumn, width = 6, side = "right", pad = "0")
# Convert to time format
times(gsub("(..)(..)(..)", "\\1:\\2:\\3", timeColumn))
}
flights_df$SCHEDULED_DEPARTURE <- convertToTime(flights_df$SCHEDULED_DEPARTURE)
flights_df$DEPARTURE_TIME <- convertToTime(flights_df$DEPARTURE_TIME)
flights_df$SCHEDULED_ARRIVAL <- convertToTime(flights_df$SCHEDULED_ARRIVAL)
flights_df$ARRIVAL_TIME <- convertToTime(flights_df$ARRIVAL_TIME)
head(flights_df)
total_incoming_flights <- table(flights_df$DESTINATION_AIRPORT)["LAX"][[1]]
total_outgoing_flights <- table(flights_df$ORIGIN_AIRPORT)["LAX"][[1]]
df <- data.frame(direction = c("Incoming", "Outgoing"),
no_of_flights = c(total_incoming_flights, total_outgoing_flights))
p <- ggplot(data = df, aes(x = direction, y = no_of_flights, fill = direction)) +
xlab("All time") + ylab("No. of flights") +
ggtitle("All time traffic stats for LAX airport") +
geom_bar(stat = "identity", width = 0.5) +
geom_text(aes(label = no_of_flights), vjust = -0.3, size = 3.5) +
theme_minimal()
p
monthly_flights <- c()
for(month in 1:length(month.name)) {
incoming_flights <- nrow(subset(flights_df, MONTH == month & DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, MONTH == month & ORIGIN_AIRPORT == "LAX"))
monthly_flights <- c(monthly_flights, c(incoming_flights, outgoing_flights))
}
monthly_labels <- as.vector(rbind(month.name, month.name))
directions <- rep(c("Incoming", "Outgoing"), length(month.name))
df <- data.frame(monthly_labels, directions, monthly_flights)
# To prevent ggplot from sorting the x-axis alphabetically
df$monthly_labels <- as.character(df$monthly_labels)
df$monthly_labels <- factor(df$monthly_labels, levels = unique(df$monthly_labels))
p <- ggplot(data = df, aes(x = monthly_labels, y = monthly_flights, fill = directions)) +
xlab("Month") + ylab("No. of flights") +
ggtitle("Monthly traffic stats for LAX airport") +
geom_bar(stat = "identity", width = 0.5, position = "dodge") +
theme_minimal()
p
day_labels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
# Since LAX was not operational on October
no_of_weeks <- 49
day_flights <- c()
for(day in 1:length(day_labels)) {
incoming_flights <- nrow(subset(flights_df, DAY_OF_WEEK == day & DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, DAY_OF_WEEK == day & ORIGIN_AIRPORT == "LAX"))
day_flights <- c(day_flights, c(incoming_flights / no_of_weeks, outgoing_flights / no_of_weeks))
}
directions <- rep(c("Incoming", "Outgoing"), length(day_labels))
day_labels <- as.vector(rbind(day_labels, day_labels))
df <- data.frame(day_labels, directions, day_flights)
# To prevent ggplot from sorting the x-axis alphabetically
df$day_labels <- as.character(df$day_labels)
df$day_labels <- factor(df$day_labels, levels = unique(df$day_labels))
p <- ggplot(data = df, aes(x = day_labels, y = day_flights, fill = directions)) +
xlab("Day") + ylab("No. of flights") +
ggtitle("Average weekday traffic stats for LAX airport") +
geom_bar(stat = "identity", width = 0.5, position = "dodge") +
theme_minimal()
p
plot_hourly_traffic_for_particular_day <- function(day, month) {
day_labels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
hourly_flights <- c()
for(hour in 0:23) {
incoming_flights <- nrow(subset(flights_df, hours(DEPARTURE_TIME) == hour & DAY == day & MONTH == month, DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, hours(ARRIVAL_TIME) == hour & DAY == day & MONTH == month, ORIGIN_AIRPORT == "LAX"))
hourly_flights <- c(hourly_flights, c(incoming_flights, outgoing_flights))
}
directions <- rep(c("Incoming", "Outgoing"), length(hourly_flights) / 2)
hour_labels <- as.vector(rbind(seq(from = 0, to = 23), seq(from = 0, to = 23)))
df <- data.frame(hour_labels, directions, hourly_flights)
p <- ggplot(data = df, aes(x = hour_labels, y = hourly_flights, fill = directions)) +
xlab("Hour of day") + ylab("No. of flights") +
ggtitle("Stats for a particular day") +
geom_bar(stat = "identity", width = 0.5, position = "dodge") +
theme_minimal()
p
}
plot_hourly_traffic_for_particular_day(day = 30, month = 8)
plot_hourly_line_traffic_by_day <- function(day_of_week) {
day_labels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
# Since LAX was not operational on October
no_of_weeks <- 49
hourly_flights <- c()
hourly_incoming_flights <- c()
hourly_outgoing_flights <- c()
for(hour in 0:23) {
incoming_flights <- nrow(subset(flights_df, hours(DEPARTURE_TIME) == hour & DAY_OF_WEEK == day_of_week & DESTINATION_AIRPORT == "LAX"))
outgoing_flights <- nrow(subset(flights_df, hours(ARRIVAL_TIME) == hour & DAY_OF_WEEK == day_of_week & ORIGIN_AIRPORT == "LAX"))
hourly_incoming_flights <- c(hourly_incoming_flights, incoming_flights / no_of_weeks)
hourly_outgoing_flights <- c(hourly_outgoing_flights, outgoing_flights / no_of_weeks)
}
directions <- rep(c("Incoming", "Outgoing"), length(hourly_flights) / 2)
hour_labels <- seq(from = 0, to = 23)
# df <- data.frame(hour_labels, directions, hourly_flights)
p <- ggplot() +
xlab("Hour of Day") + ylab("No. of flights") +
ggtitle(day_labels[day_of_week]) +
geom_line(aes(x = hour_labels, y = hourly_incoming_flights, group = 1), color = "brown1") +
geom_line(aes(x = hour_labels, y = hourly_outgoing_flights, group = 2), color = "lightseagreen") +
theme_minimal()
p
}
plot_hourly_line_traffic_by_day(1)
plot_hourly_line_traffic_by_day(2)
plot_hourly_line_traffic_by_day(3)
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
popular_routes2$ROUTE <- paste(popular_routes2$ORIGIN_AIRPORT,"-",popular_routes2$DESTINATION_AIRPORT)
popular_routes2$ORIGIN_AIRPORT <- NULL
popular_routes2$DESTINATION_AIRPORT <- NULL
popular_routes2 <- popular_routes2[,c(2,1)]
popular_routes2$ROUTE <- paste(popular_routes2$ORIGIN_AIRPORT,"-",popular_routes2$DESTINATION_AIRPORT)
popular_routes2$ORIGIN_AIRPORT <- NULL
popular_routes2$DESTINATION_AIRPORT <- NULL
popular_routes2 <- popular_routes2[,c(2,1)]
popular_routes2 <- count(flights_df %>% group_by(ORIGIN_AIRPORT,DESTINATION_AIRPORT,ARRIVAL_DELAY,DEPARTURE_DELAY) %>% filter(ORIGIN_AIRPORT == unique(ORIGIN_AIRPORT) & DESTINATION_AIRPORT == unique(DESTINATION_AIRPORT) & ARRIVAL_DELAY == mean(ARRIVAL_DELAY) & DEPARTURE_DELAY == mean(DEPARTURE_DELAY)))
